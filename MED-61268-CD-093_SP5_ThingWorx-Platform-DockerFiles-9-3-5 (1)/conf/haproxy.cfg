#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
  # Setting `log` here with the address of 127.0.0.1 will have the effect
  # of haproxy sending the udp log messages to its own rsyslog instance
  # (which sits at `127.0.0.1`) at the `local0` facility
  # valid log levels: emerg alert crit err warning notice info  debug
  log 127.0.0.1 local0 debug

#---------------------------------------------------------------------
# handle container restarts, still need to rebuild config to add or
# remove servers.
#---------------------------------------------------------------------
resolvers docker_resolver
    nameserver dns 127.0.0.11:53

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
  default-server init-addr last,libc,none
  log global
  mode http

  # Enable logging of HTTP request, session state and timers
  option httplog

  # Enable session redistribution in case of connection failure
  option redispatch

  # Enable insertion of the X-Forwarded-For header to requests sent to servers
  option forwardfor

  # Set the maximum time to wait for a connection attempt to a server to succeed
  timeout connect 5s

  # Set the maximum inactivity time on the client
  timeout client 30s

  # Set the maximum inactivity time on the server side
  timeout server 30s

  # Set the maximum inactivity time on WebSocket protocol, or forwarding a CONNECT request
  timeout tunnel 1h

#---------------------------------------------------------------------
# FrontEnd Configuration
# All incoming requests are first handled here, then routed to backend servers
#---------------------------------------------------------------------

frontend ft_web
  # exposed haproxy port

  bind *:8080 name web


  # log the session cookie if passed
  capture cookie JSESSIONID= len 32




  ## path based routing to connection server
  acl path_cxserver path -i -m beg /Thingworx/WS
  acl path_nonce_cxserver path -i -m beg /Thingworx/TWS
  acl path_tunnelserver path -i -m beg /Thingworx/WSTunnelServer
  acl path_tunnelclient path -i -m beg /Thingworx/WSTunnelClient
  use_backend cxserver if path_cxserver or path_nonce_cxserver or path_tunnelserver or path_tunnelclient


  # default traffic to platform
  default_backend platform

#---------------------------------------------------------------------
# BackEnd Platform Configuration
#---------------------------------------------------------------------
backend platform
  balance roundrobin

  # sticky session cookie
  cookie SERVER insert indirect nocache

  # health check endpoint used to determine if server can accept traffic
  option httpchk GET /Thingworx/ready






  # configure platform instances for routing


  server platform1 platform1:8080 check inter 1000 fastinter 1000 cookie twx1 resolvers docker_resolver resolve-prefer ipv4

  server platform2 platform2:8080 check inter 1000 fastinter 1000 cookie twx2 resolvers docker_resolver resolve-prefer ipv4


#---------------------------------------------------------------------
# BackEnd Connection Server Configuration
#---------------------------------------------------------------------
backend cxserver
  # sticky to incoming source IP address
  balance source

  # health check endpoint used to determine if server can accept traffic
  option httpchk GET /







  # configure connection server instances


  server cxserver1 cxserver1:8080 check port 9009 resolvers docker_resolver resolve-prefer ipv4

  server cxserver2 cxserver2:8080 check port 9009 resolvers docker_resolver resolve-prefer ipv4



#---------------------------------------------------------------------
#HAProxy Monitoring Config
#---------------------------------------------------------------------
listen stats
  bind *:1936
  mode http
  option forwardfor
  option httpclose
  stats enable
  stats uri /
  stats refresh 5s
  stats show-legends
  stats auth admin:thingworx
  stats realm Haproxy\ Statistics
