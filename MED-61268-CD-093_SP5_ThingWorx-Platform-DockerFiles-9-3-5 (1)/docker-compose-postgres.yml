version: '2.2'

volumes:
  storage:

services:
  postgresql:
    image: postgres:13.0
    ports:
      - "5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 15s
    environment:
      # NOTE: Set POSTGRES_USER, POSTGRES_PASSWORD POSTGRES_DB for connecting
      # to the postgres as super user
      - "POSTGRES_USER="
      - "POSTGRES_PASSWORD="
      - "POSTGRES_DB="

  postgresql-init:
    image: thingworx/postgresql-init-twx:latest
    entrypoint: bash -c -x "/usr/local/bin/db-check.sh && /usr/local/bin/db-setup.sh && sleep infinity"
    healthcheck:
      test: [ "CMD-SHELL", "grep 'success' tmp/status.txt || exit 1" ]
      interval: 15s
      retries: 5
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      # NOTE: Set DATABASE_ADMIN_USERNAME, DATABASE_ADMIN_PASSWORD DATABASE_ADMIN_SCHEMA for connecting
      # to the postgres as super user
      - "DATABASE_ADMIN_USERNAME="
      - "DATABASE_ADMIN_PASSWORD="
      - "DATABASE_ADMIN_SCHEMA="
      - "DATABASE_HOST=postgresql"
      - "DATABASE_PORT=5432"
      - "TWX_DATABASE_USERNAME="
      - "TWX_DATABASE_SCHEMA="
      - "TWX_DATABASE_PASSWORD="
      - "TABLESPACE_LOCATION=/var/lib/postgresql/data"

  security-cli:
    image: thingworx/security-tool:latest
    entrypoint: sh -c "/opt/docker-entrypoint.sh && sleep infinity"
    healthcheck:
      test: [ "CMD-SHELL", "grep 'success' status.txt || exit 1" ]
      interval: 15s
      retries: 5
    environment:
      KEYSTORE: 'true'
      # NOTE: Set KEYSTORE_PASSWORD (Must match value from platform container)
      KEYSTORE_PASSWORD:
      KEYSTORE_PASSWORD_FILE_PATH: '/opt'
      KEYSTORE_FILE_PATH: '/ThingworxStorage'
      CUSTOM_SECRET_LIST: 'encrypt.db.password:TWX_DATABASE_PASSWORD'
      # NOTE: Set TWX_DATABASE_PASSWORD
      TWX_DATABASE_PASSWORD:
    volumes:
      - storage:/ThingworxStorage

  platform:
    image: thingworx/platform-postgres:latest
    healthcheck:
      test: curl -f localhost:8080/Thingworx/health
      interval: 15s
    depends_on:
      security-cli:
        condition: service_healthy
      postgresql-init:
        condition: service_healthy
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - "CATALINA_OPTS=-Xms2g -Xmx4g"
      # NOTE: Set KEYSTORE_PASSWORD (Must match value from security-cli container)
      - "KEYSTORE_PASSWORD="
      - "DATABASE_HOST=postgresql"
      - "DATABASE_PORT=5432"
      - "TWX_DATABASE_USERNAME="
      - "TWX_DATABASE_SCHEMA="
      # NOTE: The following must be set for the Platform to start. This will be
      # the initial Administrator password.
      - "THINGWORX_INITIAL_ADMIN_PASSWORD="
      # NOTE: The following must be set for the Platform to start. This will be
      # the initial MetricsUser password.
      - "THINGWORX_INITIAL_METRICS_USER_PASSWORD="
      #Uncomment the below to automatically download license
      #- "LS_USERNAME=${PTCUSERNAME}"
      #- "LS_PASSWORD=${PTCPASSWORD}"
    # Use this to mount your orgs licence file, if not ThingWorx will fallback to temporary licence
    volumes:
      - storage:/ThingworxStorage
    #  - ./license.bin:/ThingworxPlatform/license.bin
